/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-02-01 03:38:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.webpage.modules.iim.calendar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myCalendar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fns:getAdminPath", com.jeeplus.common.config.Global.class, "getAdminPath", new Class[] {});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/tlds/menu.tld", Long.valueOf(1495040902485L));
    _jspx_dependants.put("/webpage/include/taglib.jsp", Long.valueOf(1496543662854L));
    _jspx_dependants.put("/WEB-INF/tlds/fns.tld", Long.valueOf(1497955049550L));
    _jspx_dependants.put("/WEB-INF/tlds/shiros.tld", Long.valueOf(1495040902489L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write(" <meta charset=\"utf-8\">\r\n");
      out.write(" <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write(" <title>我的日程</title>\r\n");
      out.write(" <meta name=\"decorator\" content=\"ani\"/>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!--\r\n");
      out.write("\t说明：需要整合农历节气和节日，引入fullcalendar.js fullcalendar2.css\r\n");
      out.write("\t不需要则引入：fullcalendar.min.js fullcalendar.css\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function() {\r\n");
      out.write("\t//页面加载完初始化日历 \r\n");
      out.write("\t$('#calendar').fullCalendar({\r\n");
      out.write("\t\t//设置日历头部信息\r\n");
      out.write("\t\theader: {\r\n");
      out.write("\t\t\tleft: 'prev,next today',\r\n");
      out.write("\t\t\tcenter: 'title',\r\n");
      out.write("\t\t\tright: 'month,agendaWeek,agendaDay'\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tevents: function (start, end, timezone, callback) {\r\n");
      out.write("\t\t    $.ajax({\r\n");
      out.write("\t\t        url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/iim/myCalendar/findList',\r\n");
      out.write("\t\t        dataType: 'json',\r\n");
      out.write("\t\t        success: function(data) {\r\n");
      out.write("\t\t            callback(data)\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t    })\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tfirstDay:1,//每行第一天为周一 \r\n");
      out.write("\t\teditable: true,\r\n");
      out.write("\t\tdroppable: true, // this allows things to be dropped onto the calendar\r\n");
      out.write("\t\tdrop: function(date, event, ui, resourceId ) {\r\n");
      out.write("\t\t\tvar start, end;\r\n");
      out.write("\t\t\tif(resourceId.intervalUnit == \"week\" || resourceId.intervalUnit == \"day\"){\r\n");
      out.write("\t\t\t\tstart=moment(date).format(\"YYYY-MM-DD HH:mm:ss\")\r\n");
      out.write("\t\t\t\tend = moment(date).add(2, 'hours').format(\"YYYY-MM-DD HH:mm:ss\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tstart=moment(date).format(\"YYYY-MM-DD\")\r\n");
      out.write("\t\t\t\tend = moment(date).add(1, 'day').format(\"YYYY-MM-DD\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t    jp.post('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/iim/myCalendar/add',\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t    start:start,\r\n");
      out.write("\t\t\t\t    end:end,\r\n");
      out.write("\t\t\t\t    title:$.trim($(this).text()),\r\n");
      out.write("\t\t\t\t    color:$(this).css(\"background-color\")\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t(result)=>{\r\n");
      out.write("\t\t\t\t\tif(result.success){\r\n");
      out.write("\t\t\t\t\t\t$('#calendar').fullCalendar('refetchEvents');\r\n");
      out.write("\t\t\t\t\t\tjp.info(result.msg);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t// Wed Jun 18 2014 \r\n");
      out.write("\t\t\t//alert(event.title + \" was dropped on \" + event.start.format());\r\n");
      out.write("\t\t\t// is the \"remove after drop\" checkbox checked?\r\n");
      out.write("\t\t\tif ($('#drop-remove').is(':checked')) {\r\n");
      out.write("\t\t\t\t// if so, remove the element from the \"Draggable Events\" list\r\n");
      out.write("\t\t\t\t$(this).remove();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("        locale: 'zh-cn',\r\n");
      out.write("       // timeFormat: 'H(:mm)' ,// uppercase H for 24-hour clock\r\n");
      out.write("\t\t//点击某一天时促发\r\n");
      out.write("\t\tdayClick: function(date, jsEvent, view) {\r\n");
      out.write("    \t},\r\n");
      out.write("\t\t//单击事件项时触发 \r\n");
      out.write("        eventClick: function(calEvent, jsEvent, view) { \r\n");
      out.write("        \tjp.open({\r\n");
      out.write("\t\t   \t    type: 2,  \r\n");
      out.write("\t\t   \t    area: ['800px', '500px'],\r\n");
      out.write("\t\t   \t    title: '事件',\r\n");
      out.write("\t\t   \t    auto:true,\r\n");
      out.write("\t\t   \t    maxmin: true, //开启最大化最小化按钮\r\n");
      out.write("\t\t   \t    content: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/iim/myCalendar/form?id='+calEvent.id ,\r\n");
      out.write("\t\t   \t    btn: ['删除','确定', '关闭'],\r\n");
      out.write("\t\t   \t    btn1:function(index,layero){\r\n");
      out.write("\t\t   \t         var iframeWin = layero.find('iframe')[0]; //得到iframe页的窗口对象，执行iframe页的方法：iframeWin.method();\r\n");
      out.write("\t   \t         \t iframeWin.contentWindow.del(index, $('#calendar'));\r\n");
      out.write("\t   \t         \t \r\n");
      out.write("\t\t   \t    },\r\n");
      out.write("\t\t   \t    btn2: function(index, layero){\r\n");
      out.write("\t\t   \t     \tvar iframeWin = layero.find('iframe')[0]; //得到iframe页的窗口对象，执行iframe页的方法：iframeWin.method();\r\n");
      out.write("   \t         \t \tiframeWin.contentWindow.save(index, $('#calendar'));\r\n");
      out.write("\t\t   \t\t  },\r\n");
      out.write("\t\t   \t   \tbtn3: function(index){ \r\n");
      out.write("\t\t   \t\t     jp.close(index);\r\n");
      out.write("\t\t   \t      }\r\n");
      out.write("\t\t   \t}); \r\n");
      out.write("        },\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//拖动事件 \r\n");
      out.write("\t\teventDrop: function(event, delta, revertFunc) {\r\n");
      out.write("        \t$.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/iim/myCalendar/drag\",{id:event.id,daydiff:delta._days, minudiff:delta._milliseconds},function(result){ \r\n");
      out.write("            \tif(result.success){\r\n");
      out.write("            \t\tjp.info(result.msg);\r\n");
      out.write("            \t}\r\n");
      out.write("            \t\r\n");
      out.write("        \t}); \r\n");
      out.write("    \t},\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//日程事件的缩放\r\n");
      out.write("\t\teventResize: function(event, delta, revertFunc) {\r\n");
      out.write("    \t\tjp.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/iim/myCalendar/resize\",{id:event.id,daydiff:delta._days, minudiff:delta._milliseconds},function(result){\r\n");
      out.write("    \t\t\tif(result.success){\r\n");
      out.write("            \t\tjp.info(result.msg); \r\n");
      out.write("        \t\t}else{\r\n");
      out.write("        \t\t\tjp.error(result.msg); \r\n");
      out.write("        \t\t}\r\n");
      out.write("    \t\t}); \r\n");
      out.write("\t\t},\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tselectable: true, //允许用户拖动 \r\n");
      out.write("\t\tselect: function( startDate, endDate, allDay, jsEvent, view ){ \r\n");
      out.write("\t    \tvar start =moment(startDate).format(\"YYYY-MM-DD HH:mm:ss\"); \r\n");
      out.write("\t    \tvar end =moment(endDate).format(\"YYYY-MM-DD HH:mm:ss\"); \r\n");
      out.write("\t        jp.open({\r\n");
      out.write("\t\t   \t    type: 2,  \r\n");
      out.write("\t\t   \t    area: ['800px', '500px'],\r\n");
      out.write("\t\t   \t    title: '事件',\r\n");
      out.write("\t\t   \t    auto:true,\r\n");
      out.write("\t\t   \t    maxmin: true, //开启最大化最小化按钮\r\n");
      out.write("\t\t   \t    content: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/iim/myCalendar/form?start='+start+'&end='+end ,\r\n");
      out.write("\t\t   \t    btn: ['确定', '关闭'],\r\n");
      out.write("\t\t   \t    yes: function(index, layero){\r\n");
      out.write("\t\t   \t    \tvar iframeWin = layero.find('iframe')[0]; //得到iframe页的窗口对象，执行iframe页的方法：iframeWin.method();\r\n");
      out.write("\t\t         \t \tiframeWin.contentWindow.save(index, $('#calendar'));\r\n");
      out.write("\t\t   \t\t  },\r\n");
      out.write("\t\t   \t   cancel: function(index){ \r\n");
      out.write("\t\t   \t      }\r\n");
      out.write("\t\t   \t\t}); \r\n");
      out.write("\t\t} \r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$('#external-events .fc-event').each(function() {\r\n");
      out.write("\t\t// store data so the calendar knows to render an event upon drop\r\n");
      out.write("\t\t$(this).data('event', {\r\n");
      out.write("\t\t\ttitle: $.trim($(this).text()), // use the element's text as the event title\r\n");
      out.write("\t\t\tcolor:$(this).css(\"background-color\")\r\n");
      out.write("\t\t\t//stick: true // maintain when user navigates (see docs on the renderEvent method)\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t// make the event draggable using jQuery UI\r\n");
      out.write("\t\t$(this).draggable({\r\n");
      out.write("\t\t\tzIndex: 999,\r\n");
      out.write("\t\t\trevert: true,      // will cause the event to go back to its\r\n");
      out.write("\t\t\trevertDuration: 0  //  original position after the drag\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("function add(){\r\n");
      out.write("\tvar html = $(\"<div class='fc-event  bg-default'>\"+$(\"#title\").val()+\"</div>\");\r\n");
      out.write("\t$(html).insertBefore($(\"#p\"));\r\n");
      out.write("\t$(html).draggable({\r\n");
      out.write("\t\tzIndex: 999,\r\n");
      out.write("\t\trevert: true,      // will cause the event to go back to its\r\n");
      out.write("\t\trevertDuration: 0  //  original position after the drag\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\t#external-events {\r\n");
      out.write("\t\tpadding: 0 10px;\r\n");
      out.write("\t\tbackground: #eee;\r\n");
      out.write("\t\ttext-align: left;\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t#external-events h4 {\r\n");
      out.write("\t\tfont-size: 16px;\r\n");
      out.write("\t\tmargin-top: 0;\r\n");
      out.write("\t\tpadding-top: 1em;\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t#external-events .fc-event {\r\n");
      out.write("\t\tmargin: 10px 0;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t#external-events p {\r\n");
      out.write("\t\tmargin: 1.5em 0;\r\n");
      out.write("\t\tfont-size: 11px;\r\n");
      out.write("\t\tcolor: #666;\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t#external-events p input {\r\n");
      out.write("\t\tmargin: 0;\r\n");
      out.write("\t\tvertical-align: middle;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"conter-wrapper\">\r\n");
      out.write("\t<div class=\"panel panel-default\">\r\n");
      out.write("\t<div class=\"panel-body\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-sm-3\">\r\n");
      out.write("\t\t\t\t<div id='external-events' class=\"list-group\">\r\n");
      out.write("\t\t\t\t\t<h4>拖拽事件</h4>\r\n");
      out.write("\t\t\t\t\t<div class='fc-event  bg-default'>事件1</div>\r\n");
      out.write("\t\t\t\t\t<div class='fc-event bg-info'>事件2</div>\r\n");
      out.write("\t\t\t\t\t<div class='fc-event bg-success'>事件3</div>\r\n");
      out.write("\t\t\t\t\t<div class='fc-event bg-warning'>事件4</div>\r\n");
      out.write("\t\t\t\t\t<div class='fc-event bg-danger'>事件5</div>\r\n");
      out.write("\t\t\t\t\t<p id=\"p\">\r\n");
      out.write("\t\t\t\t\t\t<input type='checkbox' id='drop-remove' />\r\n");
      out.write("\t\t\t\t\t\t<label for='drop-remove'>移动后删除</label>\r\n");
      out.write("\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t\t\t<input id=\"title\" type=\"text\" class=\"form-control\" placeholder=\"\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"input-group-btn\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn btn-default\" onclick=\"add()\" type=\"submit\">Add</button>\r\n");
      out.write("\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-sm-9\">\r\n");
      out.write("\t\t\t\t<div id=\"calendar\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("         \r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent(null);
    // /webpage/include/taglib.jsp(11,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("ctx");
    // /webpage/include/taglib.jsp(11,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}${fns:getAdminPath()}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0, false));
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f1.setParent(null);
    // /webpage/include/taglib.jsp(12,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setVar("ctxStatic");
    // /webpage/include/taglib.jsp(12,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}/static", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
    if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
    return false;
  }
}
